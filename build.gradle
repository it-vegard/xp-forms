buildscript {
    repositories {
        mavenLocal()
        jcenter()
        maven {
            url 'http://repo.enonic.com/public'
        }
    }

    dependencies {
        classpath "com.enonic.xp:gradle-plugin:${xpVersion}"
        
        classpath "com.moowork.gradle:gradle-node-plugin:0.11"
        
    }
}

apply plugin: 'maven'
apply plugin: 'com.enonic.xp.app'

apply plugin: 'com.moowork.node'


app {
    name = project.appName
    displayName = project.displayName
    vendorName = 'Enonic USA'
    vendorUrl = 'https://enonic.com'
}

configurations {
    rasterizer
}

dependencies {
    compile "com.enonic.xp:core-api:${xpVersion}"
    compile "com.enonic.xp:portal-api:${xpVersion}"
    include "com.enonic.xp:lib-content:${xpVersion}"
    include "com.enonic.xp:lib-portal:${xpVersion}"
    include "com.enonic.xp:lib-thymeleaf:${xpVersion}"
    include "com.enonic.xp:lib-auth:${xpVersion}"
    rasterizer "org.apache.xmlgraphics:batik-rasterizer:1.7"
    rasterizer "org.apache.xmlgraphics:batik-codec:1.7"
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url 'http://repo.enonic.com/public'
    }
    
}


uploadArchives {
    repositories {
        mavenDeployer {
            repository( url: 'http://repo.enonic.com/artifactory/public' )
        }
    }
}


node {
    version = '6.10.2'
    download = true
}

task webpack(type: NodeTask) {
    script = file('node_modules/webpack/bin/webpack.js')
}

task copyTask(type: Copy) {
    from 'src/main/resources/application.svg'
    into 'build/resources/main/admin/tools/forms-admin/'
    rename (
        'application.svg',
        'forms-admin.svg'
    )
}

task svg2png(type: org.gradle.api.tasks.JavaExec) {
    classpath configurations.rasterizer
    main "org.apache.batik.apps.rasterizer.Main"
    // -scriptSecurityOff required as the security manager of batik would interfere with the security manager of gradle
    args "-scriptSecurityOff", "-d", "build/resources/main/assets/img/icons/adminFavicon.png", "-m", "image/png", "src/main/resources/application.svg", "-bg", "0.0.0.255"
}

// processes your package.json before running webpack
webpack.dependsOn 'npmInstall'

// copies application logo into the form admin tool folder
copyTask.dependsOn webpack
copyTask.mustRunAfter webpack

// converts svg logo and copies it into the image assets folder
svg2png.dependsOn copyTask
svg2png.mustRunAfter copyTask

// bundles app
build.dependsOn svg2png
build.mustRunAfter svg2png

